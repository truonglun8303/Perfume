@model ShopNuocHoa.Models.OrderViewModel
@{
    if (ViewBag.User != null)
    {

    }

}
@using (Ajax.BeginForm("CheckOut", "Shoppingcart", new AjaxOptions
{
    HttpMethod = "POST",
    UpdateTargetId = "load_data",
    OnSuccess = "OnSuccessCO",
    OnFailure = "OnFailure",
    OnBegin = "OnBeginCO"

}, new { @Id = "myForm" }))
{
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11" ></script>
    <script>

        function OnBeginCO() {
            $('#btnCheckOut').attr("disabled", "disabled");
            $('#load_send').html('<h2>Đang gửi....</h2>');
     
            //const showLoading = function () {
            //    swal({  
            //        title: 'Now loading',
            //        allowEscapeKey: false,
            //        allowOutsideClick: false,
            //        timer: 1000,
            //        onOpen: () => {
            //            swal.showLoading();
            //        }
            //    }).then(
            //        () => { },
            //        (dismiss) => {
            //            if (dismiss === 'timer') {
            //                console.log('closed by timer!!!!');
            //                swal({
            //                    title: 'Finished!',
            //                    type: 'success',
            //                    timer: 1000,
            //                    showConfirmButton: false
            //                })
            //            }
            //        }
            //    )
            //};
            //document.getElementById("btnCheckOuta")
            //    .addEventListener('click', (event) => {
            //        showLoading();
            //    });
        }
        function OnSuccessCO(res) {
            if (res.Success) {
                if (res.Code == 1) {
                    location.href = "/ShoppingCart/CheckOutSuccess";
                }
                else {
                    location.href = res.Url;
                }
            }
        }
    </script>
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <h3>Thông tin khách hàng</h3>
    if (!Request.IsAuthenticated)
    {
        <div class="form-group">
            <label class="fw-bold">Họ tên khách hàng</label>
            @*<input type="text" name="CustomerName" required class="form-control" autocomplete="off" />*@
            @Html.TextBoxFor(x => x.CustomerName, new { @class = "form-control", @placeholder = "Họ và tên" })
            @Html.ValidationMessageFor(x => x.CustomerName, null, new { @class = "text-danger" })
        </div>


        <div class="form-group">
            <label class="fw-bold">Số điện thoại</label>
            @*<input type="text" name="Phone" class="form-control" autocomplete="off" />*@
            @Html.TextBoxFor(x => x.Phone, new { @class = "form-control", @placeholder = "Số điện thoại" })
            @Html.ValidationMessageFor(x => x.Phone, null, new { @class = "text-danger" })
        </div>


        <div class="form-group">
            <label class="fw-bold">Địa chỉ</label>
            @*<input type="text" name="Address" class="form-control" autocomplete="off" />*@
            @Html.TextBoxFor(x => x.Address, new { @class = "form-control", @placeholder = "Địa chỉ" })
            @Html.ValidationMessageFor(x => x.Address, null, new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label class="fw-bold">Email</label>
            @*<input type="text" name="Email" class="form-control" autocomplete="off" />*@
            @Html.TextBoxFor(x => x.Email, new { @class = "form-control", @placeholder = "Email" })
            @Html.ValidationMessageFor(x => x.Email, null, new { @class = "text-danger" })
        </div>
    }
    else
    {
        var user = (ShopNuocHoa.Models.ApplicationUser)ViewBag.User;
        <div class="form-group">
            <label>Họ tên khách hàng</label>
            <input type="text" name="CustomerName" value="@user.FullName" class="form-control" autocomplete="off" />

        </div>
        <div class="form-group">
            <label>Số điện thoại</label>
            <input type="text" name="Phone" value="@user.Phone" class="form-control" autocomplete="off" />
        </div>
        <div class="form-group">
            <label>Địa chỉ</label>
            <input type="text" name="Address" class="form-control" autocomplete="off" />
        </div>
        <div class="form-group">
            <label>Email</label>
            <input type="text" name="Email" value="@user.Email" class="form-control" autocomplete="off" />
        </div>
    }


    <div class="form-group">
        <label class="fw-bold">Hình thức thanh toán</label>
        <select class="form-control" name="TypePayment" id="drTypePayment">
            <option value="1" >COD</option>
            <option value="2">Chuyển khoản</option>
        </select>
    </div>
    <div class="form-group" id="load_form_payment" style="display:none;">
        <h4> <label>Chọn phương thức thanh toán:</label><br /></h4>
        <h5>Cách 1: Chuyển hướng sang VNPAY chọn phương thức thanh toán</h5>
        <label><input type="radio" name="TypePaymentVN" value="0" checked /> Cổng thanh toán VNPAYQR </label>
        <h5>Cách 2: Tách phương thức thanh toán tại site của Merchant</h5>
        <label><input type="radio" name="TypePaymentVN" value="1" /> Thanh toán qua ứng dụng hỗ trợ VNPAYQR </label><br />
        <label><input type="radio" name="TypePaymentVN" value="2" /> ATM-Tài khoản ngân hàng nội địa </label><br />
        <label><input type="radio" name="TypePaymentVN" value="3" /> Thanh toán qua thẻ quốc tế </label><br />
    </div>
    <div class="form-group" id="load_send"></div>
    <div class="form-group pt-3 pb-5">
        <button type="submit" class="btn btn-block btn-success w-100" id="btnCheckOut">Đặt hàng</button>
      
    </div>
}